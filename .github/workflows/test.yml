name: test

env:
  DOWNLOAD_CACHE_VERSION: 8

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ubuntu:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt-get install -y tree clang clang-format ccache freeglut3-dev libasound2-dev libcurl4-openssl-dev libfreetype6-dev libjack-jackd2-dev libx11-dev libxcomposite-dev libxcursor-dev libxinerama-dev libxrandr-dev mesa-common-dev ladspa-sdk webkit2gtk-4.0 libgtk-3-dev xvfb libwebkit2gtk-4.1-dev
    - name: Check format
      run: |
        clang-format --dry-run --Werror src/**/*.cc include/**/*.hh
    - name: mkdir ~/.ccache
      run: mkdir /home/runner/.ccache
    - name: Restore cache
      uses: actions/cache/restore@v4
      id: restore-cache
      with:
        path: /home/runner/.ccache
        key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt') }}-${{ env.DOWNLOAD_CACHE_VERSION }}
        restore-keys: |
          ${{ runner.os }}-ccache-
    - name: Configure CMake
      run: >
        cmake -B build
        -D CMAKE_C_COMPILER_LAUNCHER=ccache
        -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
        -S ${{ github.workspace }}
    - name: Build
      run: cmake --build build --parallel $(nproc)
    - name: Print ccache stats
      run: |
        ccache -s
        ccache -p
    - name: Always save cache
      if: always() # TODO && steps.restore-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.restore-cache.outputs.cache-primary-key }}
        # key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt') }}-${{ env.DOWNLOAD_CACHE_VERSION }}
        path: /home/runner/.ccache
    - name: Run tests
      id: test
      continue-on-error: true  # Allows next steps to run even if this fails
      run: |
        set -o pipefail
        xvfb-run -a --server-args="-screen 0 1280x1024x24" ./build/BoxTests 2>&1 | tee test_log.txt

    - name: Upload test log
      if: always()  # This ensures it uploads even if the test fails
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: test_log.txt
    - name: Check test result
      if: always()
      run: |
        if [ "${{ steps.test.outcome }}" != "success" ]; then
          echo "Tests failed"
          exit 1
        fi
  mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        brew install clang-format ccache cmake tree
    - name: Check format
      run: |
        clang-format --dry-run --Werror src/**/*.cc include/**/*.hh
    - name: mkdir ~/.ccache
      run: mkdir /home/runner/.ccache
    - name: Restore cache
      uses: actions/cache/restore@v4
      id: restore-cache
      with:
        path: /home/runner/.ccache
        key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt') }}-${{ env.DOWNLOAD_CACHE_VERSION }}
        restore-keys: |
          ${{ runner.os }}-ccache-
    - name: Configure CMake
      run: >
        cmake -B build
        -D CMAKE_C_COMPILER_LAUNCHER=ccache
        -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
        -S ${{ github.workspace }}
    - name: Build
      run: cmake --build build --parallel $(nproc)
    - name: Print ccache stats
      run: |
        ccache -s
        ccache -p
    - name: Always save cache
      if: always() # TODO && steps.restore-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.restore-cache.outputs.cache-primary-key }}
        path: /home/runner/.ccache
